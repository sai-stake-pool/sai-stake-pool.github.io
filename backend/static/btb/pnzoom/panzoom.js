(() => { var __webpack_modules__ = { 846: (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => { "use strict"; eval("/* harmony import */ var _src_panzoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(860);\n\r\nconsole.log('This is a demo version of Panzoom for testing.');\r\nconsole.log('It exposes a global (window.Panzoom) and should not be used in production.');\r\nwindow.Panzoom = _src_panzoom__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGFuem9vbS9wYW56b29tLy4vZGVtby9nbG9iYWwtcGFuem9vbS50cz83YjgwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBb0M7QUFFcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnREFBZ0QsQ0FBQztBQUM3RCxPQUFPLENBQUMsR0FBRyxDQUFDLDRFQUE0RSxDQUFDO0FBT3pGLE1BQU0sQ0FBQyxPQUFPLEdBQUcsMERBQU8iLCJmaWxlIjoiODQ2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhbnpvb20gZnJvbSAnLi4vc3JjL3Bhbnpvb20nXG5cbmNvbnNvbGUubG9nKCdUaGlzIGlzIGEgZGVtbyB2ZXJzaW9uIG9mIFBhbnpvb20gZm9yIHRlc3RpbmcuJylcbmNvbnNvbGUubG9nKCdJdCBleHBvc2VzIGEgZ2xvYmFsICh3aW5kb3cuUGFuem9vbSkgYW5kIHNob3VsZCBub3QgYmUgdXNlZCBpbiBwcm9kdWN0aW9uLicpXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgUGFuem9vbTogdHlwZW9mIFBhbnpvb21cbiAgfVxufVxud2luZG93LlBhbnpvb20gPSBQYW56b29tXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///846\n") }, 860: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => { "use strict"; eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": () => (/* binding */ panzoom)\n});\n\n// EXTERNAL MODULE: ./src/polyfills.js\nvar polyfills = __webpack_require__(252);\n;// CONCATENATED MODULE: ./src/pointers.ts\n/**\r\n * Utilites for working with multiple pointer events\r\n */\r\nfunction findEventIndex(pointers, event) {\r\n    var i = pointers.length;\r\n    while (i--) {\r\n        if (pointers[i].pointerId === event.pointerId) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction addPointer(pointers, event) {\r\n    var i;\r\n    // Add touches if applicable\r\n    if (event.touches) {\r\n        i = 0;\r\n        for (var _i = 0, _a = event.touches; _i < _a.length; _i++) {\r\n            var touch = _a[_i];\r\n            touch.pointerId = i++;\r\n            addPointer(pointers, touch);\r\n        }\r\n        return;\r\n    }\r\n    i = findEventIndex(pointers, event);\r\n    // Update if already present\r\n    if (i > -1) {\r\n        pointers.splice(i, 1);\r\n    }\r\n    pointers.push(event);\r\n}\r\nfunction removePointer(pointers, event) {\r\n    // Add touches if applicable\r\n    if (event.touches) {\r\n        // Remove all touches\r\n        while (pointers.length) {\r\n            pointers.pop();\r\n        }\r\n        return;\r\n    }\r\n    var i = findEventIndex(pointers, event);\r\n    if (i > -1) {\r\n        pointers.splice(i, 1);\r\n    }\r\n}\r\n/**\r\n * Calculates a center point between\r\n * the given pointer events, for panning\r\n * with multiple pointers.\r\n */\r\nfunction getMiddle(pointers) {\r\n    // Copy to avoid changing by reference\r\n    pointers = pointers.slice(0);\r\n    var event1 = pointers.pop();\r\n    var event2;\r\n    while ((event2 = pointers.pop())) {\r\n        event1 = {\r\n            clientX: (event2.clientX - event1.clientX) / 2 + event1.clientX,\r\n            clientY: (event2.clientY - event1.clientY) / 2 + event1.clientY\r\n        };\r\n    }\r\n    return event1;\r\n}\r\n/**\r\n * Calculates the distance between two points\r\n * for pinch zooming.\r\n * Limits to the first 2\r\n */\r\nfunction getDistance(pointers) {\r\n    if (pointers.length < 2) {\r\n        return 0;\r\n    }\r\n    var event1 = pointers[0];\r\n    var event2 = pointers[1];\r\n    return Math.sqrt(Math.pow(Math.abs(event2.clientX - event1.clientX), 2) +\r\n        Math.pow(Math.abs(event2.clientY - event1.clientY), 2));\r\n}\r\n\n;// CONCATENATED MODULE: ./src/events.ts\nvar events = {\r\n    down: 'mousedown',\r\n    move: 'mousemove',\r\n    up: 'mouseup mouseleave'\r\n};\r\nif (typeof window !== 'undefined') {\r\n    if (typeof window.PointerEvent === 'function') {\r\n        events = {\r\n            down: 'pointerdown',\r\n            move: 'pointermove',\r\n            up: 'pointerup pointerleave pointercancel'\r\n        };\r\n    }\r\n    else if (typeof window.TouchEvent === 'function') {\r\n        events = {\r\n            down: 'touchstart',\r\n            move: 'touchmove',\r\n            up: 'touchend touchcancel'\r\n        };\r\n    }\r\n}\r\n\r\nfunction onPointer(event, elem, handler, eventOpts) {\r\n    events[event].split(' ').forEach(function (name) {\r\n        ;\r\n        elem.addEventListener(name, handler, eventOpts);\r\n    });\r\n}\r\nfunction destroyPointer(event, elem, handler) {\r\n    events[event].split(' ').forEach(function (name) {\r\n        ;\r\n        elem.removeEventListener(name, handler);\r\n    });\r\n}\r\n\n;// CONCATENATED MODULE: ./src/css.ts\nvar isIE = typeof document !== 'undefined' && !!document.documentMode;\r\n/**\r\n * Lazy creation of a CSS style declaration\r\n */\r\nvar divStyle;\r\nfunction createStyle() {\r\n    if (divStyle) {\r\n        return divStyle;\r\n    }\r\n    return (divStyle = document.createElement('div').style);\r\n}\r\n/**\r\n * Proper prefixing for cross-browser compatibility\r\n */\r\nvar prefixes = ['webkit', 'moz', 'ms'];\r\nvar prefixCache = {};\r\nfunction getPrefixedName(name) {\r\n    if (prefixCache[name]) {\r\n        return prefixCache[name];\r\n    }\r\n    var divStyle = createStyle();\r\n    if (name in divStyle) {\r\n        return (prefixCache[name] = name);\r\n    }\r\n    var capName = name[0].toUpperCase() + name.slice(1);\r\n    var i = prefixes.length;\r\n    while (i--) {\r\n        var prefixedName = \"\" + prefixes[i] + capName;\r\n        if (prefixedName in divStyle) {\r\n            return (prefixCache[name] = prefixedName);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets a style value expected to be a number\r\n */\r\nfunction getCSSNum(name, style) {\r\n    return parseFloat(style[getPrefixedName(name)]) || 0;\r\n}\r\nfunction getBoxStyle(elem, name, style) {\r\n    if (style === void 0) { style = window.getComputedStyle(elem); }\r\n    // Support: FF 68+\r\n    // Firefox requires specificity for border\r\n    var suffix = name === 'border' ? 'Width' : '';\r\n    return {\r\n        left: getCSSNum(name + \"Left\" + suffix, style),\r\n        right: getCSSNum(name + \"Right\" + suffix, style),\r\n        top: getCSSNum(name + \"Top\" + suffix, style),\r\n        bottom: getCSSNum(name + \"Bottom\" + suffix, style)\r\n    };\r\n}\r\n/**\r\n * Set a style using the properly prefixed name\r\n */\r\nfunction setStyle(elem, name, value) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    elem.style[getPrefixedName(name)] = value;\r\n}\r\n/**\r\n * Constructs the transition from panzoom options\r\n * and takes care of prefixing the transition and transform\r\n */\r\nfunction setTransition(elem, options) {\r\n    var transform = getPrefixedName('transform');\r\n    setStyle(elem, 'transition', transform + \" \" + options.duration + \"ms \" + options.easing);\r\n}\r\n/**\r\n * Set the transform using the proper prefix\r\n */\r\nfunction setTransform(elem, _a, _options) {\r\n    var x = _a.x, y = _a.y, scale = _a.scale, isSVG = _a.isSVG;\r\n    setStyle(elem, 'transform', \"scale(\" + scale + \") translate(\" + x + \"px, \" + y + \"px)\");\r\n    if (isSVG && isIE) {\r\n        var matrixValue = window.getComputedStyle(elem).getPropertyValue('transform');\r\n        elem.setAttribute('transform', matrixValue);\r\n    }\r\n}\r\n/**\r\n * Dimensions used in containment and focal point zooming\r\n */\r\nfunction getDimensions(elem) {\r\n    var parent = elem.parentNode;\r\n    var style = window.getComputedStyle(elem);\r\n    var parentStyle = window.getComputedStyle(parent);\r\n    var rectElem = elem.getBoundingClientRect();\r\n    var rectParent = parent.getBoundingClientRect();\r\n    return {\r\n        elem: {\r\n            style: style,\r\n            width: rectElem.width,\r\n            height: rectElem.height,\r\n            top: rectElem.top,\r\n            bottom: rectElem.bottom,\r\n            left: rectElem.left,\r\n            right: rectElem.right,\r\n            margin: getBoxStyle(elem, 'margin', style),\r\n            border: getBoxStyle(elem, 'border', style)\r\n        },\r\n        parent: {\r\n            style: parentStyle,\r\n            width: rectParent.width,\r\n            height: rectParent.height,\r\n            top: rectParent.top,\r\n            bottom: rectParent.bottom,\r\n            left: rectParent.left,\r\n            right: rectParent.right,\r\n            padding: getBoxStyle(parent, 'padding', parentStyle),\r\n            border: getBoxStyle(parent, 'border', parentStyle)\r\n        }\r\n    };\r\n}\r\n\n;// CONCATENATED MODULE: ./src/isAttached.ts\n/**\r\n * Determine if an element is attached to the DOM\r\n * Panzoom requires this so events work properly\r\n */\r\nfunction isAttached(elem) {\r\n    var doc = elem.ownerDocument;\r\n    var parent = elem.parentNode;\r\n    return (doc &&\r\n        parent &&\r\n        doc.nodeType === 9 &&\r\n        parent.nodeType === 1 &&\r\n        doc.documentElement.contains(parent));\r\n}\r\n\n;// CONCATENATED MODULE: ./src/isExcluded.ts\nfunction getClass(elem) {\r\n    return (elem.getAttribute('class') || '').trim();\r\n}\r\nfunction hasClass(elem, className) {\r\n    return elem.nodeType === 1 && (\" \" + getClass(elem) + \" \").indexOf(\" \" + className + \" \") > -1;\r\n}\r\nfunction isExcluded(elem, options) {\r\n    for (var cur = elem; cur != null; cur = cur.parentNode) {\r\n        if (hasClass(cur, options.excludeClass) || options.exclude.indexOf(cur) > -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/isSVGElement.ts\n/**\r\n * Determine if an element is SVG by checking the namespace\r\n * Exception: the <svg> element itself should be treated like HTML\r\n */\r\nvar rsvg = /^http:[\\w\\.\\/]+svg$/;\r\nfunction isSVGElement(elem) {\r\n    return rsvg.test(elem.namespaceURI) && elem.nodeName.toLowerCase() !== 'svg';\r\n}\r\n\n;// CONCATENATED MODULE: ./src/shallowClone.ts\nfunction shallowClone(obj) {\r\n    var clone = {};\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            clone[key] = obj[key];\r\n        }\r\n    }\r\n    return clone;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/panzoom.ts\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/**\r\n * Panzoom for panning and zooming elements using CSS transforms\r\n * https://github.com/timmywil/panzoom\r\n *\r\n * Copyright Timmy Willison and other contributors\r\n * Released under the MIT license\r\n * https://github.com/timmywil/panzoom/blob/master/MIT-License.txt\r\n *\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar defaultOptions = {\r\n    animate: false,\r\n    canvas: false,\r\n    cursor: 'move',\r\n    disablePan: false,\r\n    disableZoom: false,\r\n    disableXAxis: false,\r\n    disableYAxis: false,\r\n    duration: 200,\r\n    easing: 'ease-in-out',\r\n    exclude: [],\r\n    excludeClass: 'panzoom-exclude',\r\n    handleStartEvent: function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    },\r\n    maxScale: 4,\r\n    minScale: 0.125,\r\n    overflow: 'hidden',\r\n    panOnlyWhenZoomed: false,\r\n    relative: false,\r\n    setTransform: setTransform,\r\n    startX: 0,\r\n    startY: 0,\r\n    startScale: 1,\r\n    step: 0.3,\r\n    touchAction: 'none'\r\n};\r\nfunction Panzoom(elem, options) {\r\n    if (!elem) {\r\n        throw new Error('Panzoom requires an element as an argument');\r\n    }\r\n    if (elem.nodeType !== 1) {\r\n        throw new Error('Panzoom requires an element with a nodeType of 1');\r\n    }\r\n    if (!isAttached(elem)) {\r\n        throw new Error('Panzoom should be called on elements that have been attached to the DOM');\r\n    }\r\n    options = __assign(__assign({}, defaultOptions), options);\r\n    var isSVG = isSVGElement(elem);\r\n    var parent = elem.parentNode;\r\n    // Set parent styles\r\n    parent.style.overflow = options.overflow;\r\n    parent.style.userSelect = 'none';\r\n    // This is important for mobile to\r\n    // prevent scrolling while panning\r\n    parent.style.touchAction = options.touchAction;\r\n    (options.canvas ? parent : elem).style.cursor = options.cursor;\r\n    // Set element styles\r\n    elem.style.userSelect = 'none';\r\n    elem.style.touchAction = options.touchAction;\r\n    // The default for HTML is '50% 50%'\r\n    // The default for SVG is '0 0'\r\n    // SVG can't be changed in IE\r\n    setStyle(elem, 'transformOrigin', typeof options.origin === 'string' ? options.origin : isSVG ? '0 0' : '50% 50%');\r\n    function resetStyle() {\r\n        parent.style.overflow = '';\r\n        parent.style.userSelect = '';\r\n        parent.style.touchAction = '';\r\n        parent.style.cursor = '';\r\n        elem.style.cursor = '';\r\n        elem.style.userSelect = '';\r\n        elem.style.touchAction = '';\r\n        setStyle(elem, 'transformOrigin', '');\r\n    }\r\n    function setOptions(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        for (var key in opts) {\r\n            if (opts.hasOwnProperty(key)) {\r\n                options[key] = opts[key];\r\n            }\r\n        }\r\n        // Handle option side-effects\r\n        if (opts.hasOwnProperty('cursor') || opts.hasOwnProperty('canvas')) {\r\n            parent.style.cursor = elem.style.cursor = '';\r\n            (options.canvas ? parent : elem).style.cursor = options.cursor;\r\n        }\r\n        if (opts.hasOwnProperty('overflow')) {\r\n            parent.style.overflow = opts.overflow;\r\n        }\r\n        if (opts.hasOwnProperty('touchAction')) {\r\n            parent.style.touchAction = opts.touchAction;\r\n            elem.style.touchAction = opts.touchAction;\r\n        }\r\n        if (opts.hasOwnProperty('minScale') ||\r\n            opts.hasOwnProperty('maxScale') ||\r\n            opts.hasOwnProperty('contain')) {\r\n            setMinMax();\r\n        }\r\n    }\r\n    var x = 0;\r\n    var y = 0;\r\n    var scale = 1;\r\n    var isPanning = false;\r\n    zoom(options.startScale, { animate: false });\r\n    // Wait for scale to update\r\n    // for accurate dimensions\r\n    // to constrain initial values\r\n    setTimeout(function () {\r\n        setMinMax();\r\n        pan(options.startX, options.startY, { animate: false });\r\n    });\r\n    function trigger(eventName, detail, opts) {\r\n        if (opts.silent) {\r\n            return;\r\n        }\r\n        var event = new CustomEvent(eventName, { detail: detail });\r\n        elem.dispatchEvent(event);\r\n    }\r\n    function setTransformWithEvent(eventName, opts, originalEvent) {\r\n        var value = { x: x, y: y, scale: scale, isSVG: isSVG, originalEvent: originalEvent };\r\n        requestAnimationFrame(function () {\r\n            if (typeof opts.animate === 'boolean') {\r\n                if (opts.animate) {\r\n                    setTransition(elem, opts);\r\n                }\r\n                else {\r\n                    setStyle(elem, 'transition', 'none');\r\n                }\r\n            }\r\n            opts.setTransform(elem, value, opts);\r\n        });\r\n        trigger(eventName, value, opts);\r\n        trigger('panzoomchange', value, opts);\r\n        return value;\r\n    }\r\n    function setMinMax() {\r\n        if (options.contain) {\r\n            var dims = getDimensions(elem);\r\n            var parentWidth = dims.parent.width - dims.parent.border.left - dims.parent.border.right;\r\n            var parentHeight = dims.parent.height - dims.parent.border.top - dims.parent.border.bottom;\r\n            var elemWidth = dims.elem.width / scale;\r\n            var elemHeight = dims.elem.height / scale;\r\n            var elemScaledWidth = parentWidth / elemWidth;\r\n            var elemScaledHeight = parentHeight / elemHeight;\r\n            if (options.contain === 'inside') {\r\n                options.maxScale = Math.min(elemScaledWidth, elemScaledHeight);\r\n            }\r\n            else if (options.contain === 'outside') {\r\n                options.minScale = Math.max(elemScaledWidth, elemScaledHeight);\r\n            }\r\n        }\r\n    }\r\n    function constrainXY(toX, toY, toScale, panOptions) {\r\n        var opts = __assign(__assign({}, options), panOptions);\r\n        var result = { x: x, y: y, opts: opts };\r\n        if (!opts.force && (opts.disablePan || (opts.panOnlyWhenZoomed && scale === opts.startScale))) {\r\n            return result;\r\n        }\r\n        toX = parseFloat(toX);\r\n        toY = parseFloat(toY);\r\n        if (!opts.disableXAxis) {\r\n            result.x = (opts.relative ? x : 0) + toX;\r\n        }\r\n        if (!opts.disableYAxis) {\r\n            result.y = (opts.relative ? y : 0) + toY;\r\n        }\r\n        if (opts.contain === 'inside') {\r\n            var dims = getDimensions(elem);\r\n            result.x = Math.max(-dims.elem.margin.left - dims.parent.padding.left, Math.min(dims.parent.width -\r\n                dims.elem.width / toScale -\r\n                dims.parent.padding.left -\r\n                dims.elem.margin.left -\r\n                dims.parent.border.left -\r\n                dims.parent.border.right, result.x));\r\n            result.y = Math.max(-dims.elem.margin.top - dims.parent.padding.top, Math.min(dims.parent.height -\r\n                dims.elem.height / toScale -\r\n                dims.parent.padding.top -\r\n                dims.elem.margin.top -\r\n                dims.parent.border.top -\r\n                dims.parent.border.bottom, result.y));\r\n        }\r\n        else if (opts.contain === 'outside') {\r\n            var dims = getDimensions(elem);\r\n            var realWidth = dims.elem.width / scale;\r\n            var realHeight = dims.elem.height / scale;\r\n            var scaledWidth = realWidth * toScale;\r\n            var scaledHeight = realHeight * toScale;\r\n            var diffHorizontal = (scaledWidth - realWidth) / 2;\r\n            var diffVertical = (scaledHeight - realHeight) / 2;\r\n            var minX = (-(scaledWidth - dims.parent.width) -\r\n                dims.parent.padding.left -\r\n                dims.parent.border.left -\r\n                dims.parent.border.right +\r\n                diffHorizontal) /\r\n                toScale;\r\n            var maxX = (diffHorizontal - dims.parent.padding.left) / toScale;\r\n            result.x = Math.max(Math.min(result.x, maxX), minX);\r\n            var minY = (-(scaledHeight - dims.parent.height) -\r\n                dims.parent.padding.top -\r\n                dims.parent.border.top -\r\n                dims.parent.border.bottom +\r\n                diffVertical) /\r\n                toScale;\r\n            var maxY = (diffVertical - dims.parent.padding.top) / toScale;\r\n            result.y = Math.max(Math.min(result.y, maxY), minY);\r\n        }\r\n        return result;\r\n    }\r\n    function constrainScale(toScale, zoomOptions) {\r\n        var opts = __assign(__assign({}, options), zoomOptions);\r\n        var result = { scale: scale, opts: opts };\r\n        if (!opts.force && opts.disableZoom) {\r\n            return result;\r\n        }\r\n        result.scale = Math.min(Math.max(toScale, opts.minScale), opts.maxScale);\r\n        return result;\r\n    }\r\n    function pan(toX, toY, panOptions, originalEvent) {\r\n        var result = constrainXY(toX, toY, scale, panOptions);\r\n        var opts = result.opts;\r\n        x = result.x;\r\n        y = result.y;\r\n        return setTransformWithEvent('panzoompan', opts, originalEvent);\r\n    }\r\n    function zoom(toScale, zoomOptions, originalEvent) {\r\n        var result = constrainScale(toScale, zoomOptions);\r\n        var opts = result.opts;\r\n        if (!opts.force && opts.disableZoom) {\r\n            return;\r\n        }\r\n        toScale = result.scale;\r\n        var toX = x;\r\n        var toY = y;\r\n        if (opts.focal) {\r\n            // The difference between the point after the scale and the point before the scale\r\n            // plus the current translation after the scale\r\n            // neutralized to no scale (as the transform scale will apply to the translation)\r\n            var focal = opts.focal;\r\n            toX = (focal.x / toScale - focal.x / scale + x * toScale) / toScale;\r\n            toY = (focal.y / toScale - focal.y / scale + y * toScale) / toScale;\r\n        }\r\n        var panResult = constrainXY(toX, toY, toScale, { relative: false, force: true });\r\n        x = panResult.x;\r\n        y = panResult.y;\r\n        scale = toScale;\r\n        return setTransformWithEvent('panzoomzoom', opts, originalEvent);\r\n    }\r\n    function zoomInOut(isIn, zoomOptions) {\r\n        var opts = __assign(__assign(__assign({}, options), { animate: true }), zoomOptions);\r\n        return zoom(scale * Math.exp((isIn ? 1 : -1) * opts.step), opts);\r\n    }\r\n    function zoomIn(zoomOptions) {\r\n        return zoomInOut(true, zoomOptions);\r\n    }\r\n    function zoomOut(zoomOptions) {\r\n        return zoomInOut(false, zoomOptions);\r\n    }\r\n    function zoomToPoint(toScale, point, zoomOptions, originalEvent) {\r\n        var dims = getDimensions(elem);\r\n        // Instead of thinking of operating on the panzoom element,\r\n        // think of operating on the area inside the panzoom\r\n        // element's parent\r\n        // Subtract padding and border\r\n        var effectiveArea = {\r\n            width: dims.parent.width -\r\n                dims.parent.padding.left -\r\n                dims.parent.padding.right -\r\n                dims.parent.border.left -\r\n                dims.parent.border.right,\r\n            height: dims.parent.height -\r\n                dims.parent.padding.top -\r\n                dims.parent.padding.bottom -\r\n                dims.parent.border.top -\r\n                dims.parent.border.bottom\r\n        };\r\n        // Adjust the clientX/clientY to ignore the area\r\n        // outside the effective area\r\n        var clientX = point.clientX -\r\n            dims.parent.left -\r\n            dims.parent.padding.left -\r\n            dims.parent.border.left -\r\n            dims.elem.margin.left;\r\n        var clientY = point.clientY -\r\n            dims.parent.top -\r\n            dims.parent.padding.top -\r\n            dims.parent.border.top -\r\n            dims.elem.margin.top;\r\n        // Adjust the clientX/clientY for HTML elements,\r\n        // because they have a transform-origin of 50% 50%\r\n        if (!isSVG) {\r\n            clientX -= dims.elem.width / scale / 2;\r\n            clientY -= dims.elem.height / scale / 2;\r\n        }\r\n        // Convert the mouse point from it's position over the\r\n        // effective area before the scale to the position\r\n        // over the effective area after the scale.\r\n        var focal = {\r\n            x: (clientX / effectiveArea.width) * (effectiveArea.width * toScale),\r\n            y: (clientY / effectiveArea.height) * (effectiveArea.height * toScale)\r\n        };\r\n        return zoom(toScale, __assign(__assign({ animate: false }, zoomOptions), { focal: focal }), originalEvent);\r\n    }\r\n    function zoomWithWheel(event, zoomOptions) {\r\n        // Need to prevent the default here\r\n        // or it conflicts with regular page scroll\r\n        event.preventDefault();\r\n        var opts = __assign(__assign({}, options), zoomOptions);\r\n        // Normalize to deltaX in case shift modifier is used on Mac\r\n        var delta = event.deltaY === 0 && event.deltaX ? event.deltaX : event.deltaY;\r\n        var wheel = delta < 0 ? 1 : -1;\r\n        var toScale = constrainScale(scale * Math.exp((wheel * opts.step) / 3), opts).scale;\r\n        return zoomToPoint(toScale, event, opts);\r\n    }\r\n    function reset(resetOptions) {\r\n        var opts = __assign(__assign(__assign({}, options), { animate: true, force: true }), resetOptions);\r\n        scale = constrainScale(opts.startScale, opts).scale;\r\n        var panResult = constrainXY(opts.startX, opts.startY, scale, opts);\r\n        x = panResult.x;\r\n        y = panResult.y;\r\n        return setTransformWithEvent('panzoomreset', opts);\r\n    }\r\n    var origX;\r\n    var origY;\r\n    var startClientX;\r\n    var startClientY;\r\n    var startScale;\r\n    var startDistance;\r\n    var pointers = [];\r\n    function handleDown(event) {\r\n        // Don't handle this event if the target is excluded\r\n        if (isExcluded(event.target, options)) {\r\n            return;\r\n        }\r\n        addPointer(pointers, event);\r\n        isPanning = true;\r\n        options.handleStartEvent(event);\r\n        origX = x;\r\n        origY = y;\r\n        trigger('panzoomstart', { x: x, y: y, scale: scale, isSVG: isSVG, originalEvent: event }, options);\r\n        // This works whether there are multiple\r\n        // pointers or not\r\n        var point = getMiddle(pointers);\r\n        startClientX = point.clientX;\r\n        startClientY = point.clientY;\r\n        startScale = scale;\r\n        startDistance = getDistance(pointers);\r\n    }\r\n    function move(event) {\r\n        if (!isPanning ||\r\n            origX === undefined ||\r\n            origY === undefined ||\r\n            startClientX === undefined ||\r\n            startClientY === undefined) {\r\n            return;\r\n        }\r\n        addPointer(pointers, event);\r\n        var current = getMiddle(pointers);\r\n        if (pointers.length > 1) {\r\n            // Use the distance between the first 2 pointers\r\n            // to determine the current scale\r\n            var diff = getDistance(pointers) - startDistance;\r\n            var toScale = constrainScale((diff * options.step) / 80 + startScale).scale;\r\n            zoomToPoint(toScale, current);\r\n        }\r\n        pan(origX + (current.clientX - startClientX) / scale, origY + (current.clientY - startClientY) / scale, {\r\n            animate: false\r\n        }, event);\r\n    }\r\n    function handleUp(event) {\r\n        // Don't call panzoomend when panning with 2 touches\r\n        // until both touches end\r\n        if (pointers.length === 1) {\r\n            trigger('panzoomend', { x: x, y: y, scale: scale, isSVG: isSVG, originalEvent: event }, options);\r\n        }\r\n        // Note: don't remove all pointers\r\n        // Can restart without having to reinitiate all of them\r\n        // Remove the pointer regardless of the isPanning state\r\n        removePointer(pointers, event);\r\n        if (!isPanning) {\r\n            return;\r\n        }\r\n        isPanning = false;\r\n        origX = origY = startClientX = startClientY = undefined;\r\n    }\r\n    var bound = false;\r\n    function bind() {\r\n        if (bound) {\r\n            return;\r\n        }\r\n        bound = true;\r\n        onPointer('down', options.canvas ? parent : elem, handleDown);\r\n        onPointer('move', document, move, { passive: true });\r\n        onPointer('up', document, handleUp, { passive: true });\r\n    }\r\n    function destroy() {\r\n        bound = false;\r\n        destroyPointer('down', options.canvas ? parent : elem, handleDown);\r\n        destroyPointer('move', document, move);\r\n        destroyPointer('up', document, handleUp);\r\n    }\r\n    if (!options.noBind) {\r\n        bind();\r\n    }\r\n    return {\r\n        bind: bind,\r\n        destroy: destroy,\r\n        eventNames: events,\r\n        getPan: function () { return ({ x: x, y: y }); },\r\n        getScale: function () { return scale; },\r\n        getOptions: function () { return shallowClone(options); },\r\n        pan: pan,\r\n        reset: reset,\r\n        resetStyle: resetStyle,\r\n        setOptions: setOptions,\r\n        setStyle: function (name, value) { return setStyle(elem, name, value); },\r\n        zoom: zoom,\r\n        zoomIn: zoomIn,\r\n        zoomOut: zoomOut,\r\n        zoomToPoint: zoomToPoint,\r\n        zoomWithWheel: zoomWithWheel\r\n    };\r\n}\r\nPanzoom.defaultOptions = defaultOptions;\r\n/* harmony default export */ const panzoom = (Panzoom);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///860\n") }, 252: () => { eval("/* eslint-disable no-var */\nif (typeof window !== 'undefined') {\n  // Support: IE11 only\n  if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach\n  }\n  // Support: IE11 only\n  // CustomEvent is an object instead of a constructor\n  if (typeof window.CustomEvent !== 'function') {\n    window.CustomEvent = function CustomEvent(event, params) {\n      params = params || { bubbles: false, cancelable: false, detail: null }\n      var evt = document.createEvent('CustomEvent')\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n      return evt\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcGFuem9vbS9wYW56b29tLy4vc3JjL3BvbHlmaWxscy5qcz8wNjc0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAvLyBTdXBwb3J0OiBJRTExIG9ubHlcbiAgaWYgKHdpbmRvdy5Ob2RlTGlzdCAmJiAhTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcbiAgICBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCA9IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoXG4gIH1cbiAgLy8gU3VwcG9ydDogSUUxMSBvbmx5XG4gIC8vIEN1c3RvbUV2ZW50IGlzIGFuIG9iamVjdCBpbnN0ZWFkIG9mIGEgY29uc3RydWN0b3JcbiAgaWYgKHR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQgIT09ICdmdW5jdGlvbicpIHtcbiAgICB3aW5kb3cuQ3VzdG9tRXZlbnQgPSBmdW5jdGlvbiBDdXN0b21FdmVudChldmVudCwgcGFyYW1zKSB7XG4gICAgICBwYXJhbXMgPSBwYXJhbXMgfHwgeyBidWJibGVzOiBmYWxzZSwgY2FuY2VsYWJsZTogZmFsc2UsIGRldGFpbDogbnVsbCB9XG4gICAgICB2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50JylcbiAgICAgIGV2dC5pbml0Q3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcy5idWJibGVzLCBwYXJhbXMuY2FuY2VsYWJsZSwgcGFyYW1zLmRldGFpbClcbiAgICAgIHJldHVybiBldnRcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///252\n") } }, __webpack_module_cache__ = {}, inProgress, dataWebpackPrefix; function __webpack_require__(Q) { var U = __webpack_module_cache__[Q]; if (void 0 !== U) { if (void 0 !== U.error) throw U.error; return U.exports } var F = __webpack_module_cache__[Q] = { exports: {} }; try { var B = { id: Q, module: F, factory: __webpack_modules__[Q], require: __webpack_require__ }; __webpack_require__.i.forEach((function (Q) { Q(B) })), F = B.module, B.factory.call(F.exports, F, F.exports, B.require) } catch (Q) { throw F.error = Q, Q } return F.exports } __webpack_require__.m = __webpack_modules__, __webpack_require__.c = __webpack_module_cache__, __webpack_require__.i = [], __webpack_require__.d = (Q, U) => { for (var F in U) __webpack_require__.o(U, F) && !__webpack_require__.o(Q, F) && Object.defineProperty(Q, F, { enumerable: !0, get: U[F] }) }, __webpack_require__.hu = Q => Q + "." + __webpack_require__.h() + ".hot-update.js", __webpack_require__.hmrF = () => "panzoom." + __webpack_require__.h() + ".hot-update.json", __webpack_require__.h = () => "a15180ed1cd44db471a6", __webpack_require__.g = function () { if ("object" == typeof globalThis) return globalThis; try { return this || new Function("return this")() } catch (Q) { if ("object" == typeof window) return window } }(), __webpack_require__.o = (Q, U) => Object.prototype.hasOwnProperty.call(Q, U), inProgress = {}, dataWebpackPrefix = "@panzoom/panzoom:", __webpack_require__.l = (Q, U, F, B) => { if (inProgress[Q]) inProgress[Q].push(U); else { var n, e; if (void 0 !== F) for (var s = document.getElementsByTagName("script"), t = 0; t < s.length; t++) { var l = s[t]; if (l.getAttribute("src") == Q || l.getAttribute("data-webpack") == dataWebpackPrefix + F) { n = l; break } } n || (e = !0, (n = document.createElement("script")).charset = "utf-8", n.timeout = 120, __webpack_require__.nc && n.setAttribute("nonce", __webpack_require__.nc), n.setAttribute("data-webpack", dataWebpackPrefix + F), n.src = Q), inProgress[Q] = [U]; var r = (U, F) => { n.onerror = n.onload = null, clearTimeout(c); var B = inProgress[Q]; if (delete inProgress[Q], n.parentNode && n.parentNode.removeChild(n), B && B.forEach((Q => Q(F))), U) return U(F) }, c = setTimeout(r.bind(null, void 0, { type: "timeout", target: n }), 12e4); n.onerror = r.bind(null, n.onerror), n.onload = r.bind(null, n.onload), e && document.head.appendChild(n) } }, (() => { var Q, U, F, B, n = {}, e = __webpack_require__.c, s = [], t = [], l = "idle"; function r(Q) { l = Q; for (var U = 0; U < t.length; U++)t[U].call(null, Q) } function c(Q) { if (0 === U.length) return Q(); var F = U; return U = [], Promise.all(F).then((function () { return c(Q) })) } function i(Q) { if ("idle" !== l) throw new Error("check() is only allowed in idle status"); return r("check"), __webpack_require__.hmrM().then((function (B) { if (!B) return r(d() ? "ready" : "idle"), null; r("prepare"); var n = []; return U = [], F = [], Promise.all(Object.keys(__webpack_require__.hmrC).reduce((function (Q, U) { return __webpack_require__.hmrC[U](B.c, B.r, B.m, Q, F, n), Q }), [])).then((function () { return c((function () { return Q ? g(Q) : (r("ready"), n) })) })) })) } function b(Q) { return "ready" !== l ? Promise.resolve().then((function () { throw new Error("apply() is only allowed in ready status") })) : g(Q) } function g(Q) { Q = Q || {}, d(); var U = F.map((function (U) { return U(Q) })); F = void 0; var n, e = U.map((function (Q) { return Q.error })).filter(Boolean); if (e.length > 0) return r("abort"), Promise.resolve().then((function () { throw e[0] })); r("dispose"), U.forEach((function (Q) { Q.dispose && Q.dispose() })), r("apply"); var s = function (Q) { n || (n = Q) }, t = []; return U.forEach((function (Q) { if (Q.apply) { var U = Q.apply(s); if (U) for (var F = 0; F < U.length; F++)t.push(U[F]) } })), n ? (r("fail"), Promise.resolve().then((function () { throw n }))) : B ? g(Q).then((function (Q) { return t.forEach((function (U) { Q.indexOf(U) < 0 && Q.push(U) })), Q })) : (r("idle"), Promise.resolve(t)) } function d() { if (B) return F || (F = []), Object.keys(__webpack_require__.hmrI).forEach((function (Q) { B.forEach((function (U) { __webpack_require__.hmrI[Q](U, F) })) })), B = void 0, !0 } __webpack_require__.hmrD = n, __webpack_require__.i.push((function (g) { var d, x, I, a, o = g.module, L = function (F, B) { var n = e[B]; if (!n) return F; var t = function (U) { if (n.hot.active) { if (e[U]) { var t = e[U].parents; -1 === t.indexOf(B) && t.push(B) } else s = [B], Q = U; -1 === n.children.indexOf(U) && n.children.push(U) } else console.warn("[HMR] unexpected require(" + U + ") from disposed module " + B), s = []; return F(U) }, i = function (Q) { return { configurable: !0, enumerable: !0, get: function () { return F[Q] }, set: function (U) { F[Q] = U } } }; for (var b in F) Object.prototype.hasOwnProperty.call(F, b) && "e" !== b && Object.defineProperty(t, b, i(b)); return t.e = function (Q) { return function (Q) { switch (l) { case "ready": return r("prepare"), U.push(Q), c((function () { r("ready") })), Q; case "prepare": return U.push(Q), Q; default: return Q } }(F.e(Q)) }, t }(g.require, g.id); o.hot = (d = g.id, x = o, a = { _acceptedDependencies: {}, _acceptedErrorHandlers: {}, _declinedDependencies: {}, _selfAccepted: !1, _selfDeclined: !1, _selfInvalidated: !1, _disposeHandlers: [], _main: I = Q !== d, _requireSelf: function () { s = x.parents.slice(), Q = I ? void 0 : d, __webpack_require__(d) }, active: !0, accept: function (Q, U, F) { if (void 0 === Q) a._selfAccepted = !0; else if ("function" == typeof Q) a._selfAccepted = Q; else if ("object" == typeof Q && null !== Q) for (var B = 0; B < Q.length; B++)a._acceptedDependencies[Q[B]] = U || function () { }, a._acceptedErrorHandlers[Q[B]] = F; else a._acceptedDependencies[Q] = U || function () { }, a._acceptedErrorHandlers[Q] = F }, decline: function (Q) { if (void 0 === Q) a._selfDeclined = !0; else if ("object" == typeof Q && null !== Q) for (var U = 0; U < Q.length; U++)a._declinedDependencies[Q[U]] = !0; else a._declinedDependencies[Q] = !0 }, dispose: function (Q) { a._disposeHandlers.push(Q) }, addDisposeHandler: function (Q) { a._disposeHandlers.push(Q) }, removeDisposeHandler: function (Q) { var U = a._disposeHandlers.indexOf(Q); U >= 0 && a._disposeHandlers.splice(U, 1) }, invalidate: function () { switch (this._selfInvalidated = !0, l) { case "idle": F = [], Object.keys(__webpack_require__.hmrI).forEach((function (Q) { __webpack_require__.hmrI[Q](d, F) })), r("ready"); break; case "ready": Object.keys(__webpack_require__.hmrI).forEach((function (Q) { __webpack_require__.hmrI[Q](d, F) })); break; case "prepare": case "check": case "dispose": case "apply": (B = B || []).push(d) } }, check: i, apply: b, status: function (Q) { if (!Q) return l; t.push(Q) }, addStatusHandler: function (Q) { t.push(Q) }, removeStatusHandler: function (Q) { var U = t.indexOf(Q); U >= 0 && t.splice(U, 1) }, data: n[d] }, Q = void 0, a), o.parents = s, o.children = [], s = [], g.require = L })), __webpack_require__.hmrC = {}, __webpack_require__.hmrI = {} })(), (() => { var Q; __webpack_require__.g.importScripts && (Q = __webpack_require__.g.location + ""); var U = __webpack_require__.g.document; if (!Q && U && (U.currentScript && (Q = U.currentScript.src), !Q)) { var F = U.getElementsByTagName("script"); F.length && (Q = F[F.length - 1].src) } if (!Q) throw new Error("Automatic publicPath is not supported in this browser"); Q = Q.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/"), __webpack_require__.p = Q })(), (() => { var Q, U, F, B, n = { 478: 0 }, e = {}; function s(Q) { return new Promise(((U, F) => { e[Q] = U; var B = __webpack_require__.p + __webpack_require__.hu(Q), n = new Error; __webpack_require__.l(B, (U => { if (e[Q]) { e[Q] = void 0; var B = U && ("load" === U.type ? "missing" : U.type), s = U && U.target && U.target.src; n.message = "Loading hot update chunk " + Q + " failed.\n(" + B + ": " + s + ")", n.name = "ChunkLoadError", n.type = B, n.request = s, F(n) } })) })) } function t(e) { function s(Q) { for (var U = [Q], F = {}, B = U.map((function (Q) { return { chain: [Q], id: Q } })); B.length > 0;) { var n = B.pop(), e = n.id, s = n.chain, l = __webpack_require__.c[e]; if (l && (!l.hot._selfAccepted || l.hot._selfInvalidated)) { if (l.hot._selfDeclined) return { type: "self-declined", chain: s, moduleId: e }; if (l.hot._main) return { type: "unaccepted", chain: s, moduleId: e }; for (var r = 0; r < l.parents.length; r++) { var c = l.parents[r], i = __webpack_require__.c[c]; if (i) { if (i.hot._declinedDependencies[e]) return { type: "declined", chain: s.concat([c]), moduleId: e, parentId: c }; -1 === U.indexOf(c) && (i.hot._acceptedDependencies[e] ? (F[c] || (F[c] = []), t(F[c], [e])) : (delete F[c], U.push(c), B.push({ chain: s.concat([c]), id: c }))) } } } } return { type: "accepted", moduleId: Q, outdatedModules: U, outdatedDependencies: F } } function t(Q, U) { for (var F = 0; F < U.length; F++) { var B = U[F]; -1 === Q.indexOf(B) && Q.push(B) } } __webpack_require__.f && delete __webpack_require__.f.jsonpHmr, Q = void 0; var l = {}, r = [], c = {}, i = function (Q) { console.warn("[HMR] unexpected require(" + Q.id + ") to disposed module") }; for (var b in U) if (__webpack_require__.o(U, b)) { var g, d = U[b], x = !1, I = !1, a = !1, o = ""; switch ((g = d ? s(b) : { type: "disposed", moduleId: b }).chain && (o = "\nUpdate propagation: " + g.chain.join(" -> ")), g.type) { case "self-declined": e.onDeclined && e.onDeclined(g), e.ignoreDeclined || (x = new Error("Aborted because of self decline: " + g.moduleId + o)); break; case "declined": e.onDeclined && e.onDeclined(g), e.ignoreDeclined || (x = new Error("Aborted because of declined dependency: " + g.moduleId + " in " + g.parentId + o)); break; case "unaccepted": e.onUnaccepted && e.onUnaccepted(g), e.ignoreUnaccepted || (x = new Error("Aborted because " + b + " is not accepted" + o)); break; case "accepted": e.onAccepted && e.onAccepted(g), I = !0; break; case "disposed": e.onDisposed && e.onDisposed(g), a = !0; break; default: throw new Error("Unexception type " + g.type) }if (x) return { error: x }; if (I) for (b in c[b] = d, t(r, g.outdatedModules), g.outdatedDependencies) __webpack_require__.o(g.outdatedDependencies, b) && (l[b] || (l[b] = []), t(l[b], g.outdatedDependencies[b])); a && (t(r, [g.moduleId]), c[b] = i) } U = void 0; for (var L, u = [], S = 0; S < r.length; S++) { var C = r[S], G = __webpack_require__.c[C]; G && (G.hot._selfAccepted || G.hot._main) && c[C] !== i && !G.hot._selfInvalidated && u.push({ module: C, require: G.hot._requireSelf, errorHandler: G.hot._selfAccepted }) } return { dispose: function () { var Q; F.forEach((function (Q) { delete n[Q] })), F = void 0; for (var U, B = r.slice(); B.length > 0;) { var e = B.pop(), s = __webpack_require__.c[e]; if (s) { var t = {}, c = s.hot._disposeHandlers; for (S = 0; S < c.length; S++)c[S].call(null, t); for (__webpack_require__.hmrD[e] = t, s.hot.active = !1, delete __webpack_require__.c[e], delete l[e], S = 0; S < s.children.length; S++) { var i = __webpack_require__.c[s.children[S]]; i && (Q = i.parents.indexOf(e)) >= 0 && i.parents.splice(Q, 1) } } } for (var b in l) if (__webpack_require__.o(l, b) && (s = __webpack_require__.c[b])) for (L = l[b], S = 0; S < L.length; S++)U = L[S], (Q = s.children.indexOf(U)) >= 0 && s.children.splice(Q, 1) }, apply: function (Q) { for (var U in c) __webpack_require__.o(c, U) && (__webpack_require__.m[U] = c[U]); for (var F = 0; F < B.length; F++)B[F](__webpack_require__); for (var n in l) if (__webpack_require__.o(l, n)) { var s = __webpack_require__.c[n]; if (s) { L = l[n]; for (var t = [], i = [], b = [], g = 0; g < L.length; g++) { var d = L[g], x = s.hot._acceptedDependencies[d], I = s.hot._acceptedErrorHandlers[d]; if (x) { if (-1 !== t.indexOf(x)) continue; t.push(x), i.push(I), b.push(d) } } for (var a = 0; a < t.length; a++)try { t[a].call(null, L) } catch (U) { if ("function" == typeof i[a]) try { i[a](U, { moduleId: n, dependencyId: b[a] }) } catch (F) { e.onErrored && e.onErrored({ type: "accept-error-handler-errored", moduleId: n, dependencyId: b[a], error: F, originalError: U }), e.ignoreErrored || (Q(F), Q(U)) } else e.onErrored && e.onErrored({ type: "accept-errored", moduleId: n, dependencyId: b[a], error: U }), e.ignoreErrored || Q(U) } } } for (var o = 0; o < u.length; o++) { var S = u[o], C = S.module; try { S.require(C) } catch (U) { if ("function" == typeof S.errorHandler) try { S.errorHandler(U, { moduleId: C, module: __webpack_require__.c[C] }) } catch (F) { e.onErrored && e.onErrored({ type: "self-accept-error-handler-errored", moduleId: C, error: F, originalError: U }), e.ignoreErrored || (Q(F), Q(U)) } else e.onErrored && e.onErrored({ type: "self-accept-errored", moduleId: C, error: U }), e.ignoreErrored || Q(U) } } return r } } } self.webpackHotUpdate_panzoom_panzoom = (Q, F, n) => { for (var s in F) __webpack_require__.o(F, s) && (U[s] = F[s]); n && B.push(n), e[Q] && (e[Q](), e[Q] = void 0) }, __webpack_require__.hmrI.jsonp = function (Q, n) { U || (U = {}, B = [], F = [], n.push(t)), __webpack_require__.o(U, Q) || (U[Q] = __webpack_require__.m[Q]) }, __webpack_require__.hmrC.jsonp = function (e, l, r, c, i, b) { i.push(t), Q = {}, F = l, U = r.reduce((function (Q, U) { return Q[U] = !1, Q }), {}), B = [], e.forEach((function (U) { __webpack_require__.o(n, U) && void 0 !== n[U] && (c.push(s(U)), Q[U] = !0) })), __webpack_require__.f && (__webpack_require__.f.jsonpHmr = function (U, F) { Q && !__webpack_require__.o(Q, U) && __webpack_require__.o(n, U) && void 0 !== n[U] && (F.push(s(U)), Q[U] = !0) }) }, __webpack_require__.hmrM = () => { if ("undefined" == typeof fetch) throw new Error("No browser support: need fetch API"); return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((Q => { if (404 !== Q.status) { if (!Q.ok) throw new Error("Failed to fetch update manifest " + Q.statusText); return Q.json() } })) } })(); var __webpack_exports__ = __webpack_require__(846) })();